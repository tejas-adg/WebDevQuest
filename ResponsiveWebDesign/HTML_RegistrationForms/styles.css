/*
Most browsers inject their own default CSS properties and values for different elements.
By default, a padding of 1px 2px is given to input elements you can type in.
*/

body {
	width: 100%;

	/* The vh unit stands for viewport height, and is equal to 1% of the height of the viewport.
	This makes it relative to the viewport height. */
	height: 100vh;
	margin: 0;
	background-color: #1b1b32;
	color: #f5f6f7;
	font-family: Tahoma;
	font-size: 16px;
}

h1,
p {
	margin: 1em auto;
	text-align: center;
}

form {
	width: 60vw;
	max-width: 500px;
	min-width: 300px;
	margin: 0 auto;
	padding-bottom: 2em;
}

fieldset {
	border: none;
	padding: 2rem 0;
	border-bottom: 3px solid #3b3b4f;
}

fieldset:last-of-type {
	border-bottom: none;
}

label {
	display: block;
	margin: 0.5rem 0;
}

input,
textarea,
select {
	margin: 10px 0 0 0;
	width: 100%;
	min-height: 2em;
}

input,
textarea {
	background-color: #0a0a23;
	border: 1px solid #0a0a23;
	color: #ffffff;
}

.inline {

	/* Giving elements a width of `unset`. This will remove the earlier rule which set all the input elements to `width: 100%`. */
	width: unset;
	margin: 0 0.5em 0 0;
	vertical-align: middle;
}

/*
To style the submit button, you can use an attribute selector, which selects an element based on the given attribute value. Here is an example:

`input[name="password"]`

The above selects input elements with a name attribute value of password.
*/
input[type="submit"] {
	display: block;
	width: 60%;
	margin: 1em auto;
	height: 2em;
	font-size: 1.1rem;
	background-color: #3b3b4f;
	border-color: white;
	min-width: 300px;
}

input[type="file"] {
	padding: 1px 2px;
}

.inline {
	display: inline;
}

a {
	color: #dfdfe2;
}